// <auto-generated />
using System;
using Followers.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Followers.Model.Migrations
{
    [DbContext(typeof(FollowersDbContext))]
    partial class FollowersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Followers.Model.Clients.Db.Entities.EfClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Rank")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.ToTable("Clients");

                    b.HasCheckConstraint("CK_Clients_Id", "[Id] > 0");
                });

            modelBuilder.Entity("Followers.Model.Clients.Db.Entities.EfSubscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubscribingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubscriberId", "SubscribingId");

                    b.HasIndex("SubscribingId");

                    b.ToTable("Subscribers");

                    b.HasCheckConstraint("CK_Subscribers", "[SubscriberId] <> [SubscribingId]");

                    b.HasCheckConstraint("CK_Subscribers_SubscriberId", "[SubscriberId] > 0");

                    b.HasCheckConstraint("CK_Subscribers_SubscribingId", "[SubscribingId] > 0");
                });

            modelBuilder.Entity("Followers.Model.Clients.Db.Entities.EfSubscriber", b =>
                {
                    b.HasOne("Followers.Model.Clients.Db.Entities.EfClient", "Subscriber")
                        .WithMany("Subscribers")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Followers.Model.Clients.Db.Entities.EfClient", "Subscribing")
                        .WithMany("Subscribings")
                        .HasForeignKey("SubscribingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");

                    b.Navigation("Subscribing");
                });

            modelBuilder.Entity("Followers.Model.Clients.Db.Entities.EfClient", b =>
                {
                    b.Navigation("Subscribers");

                    b.Navigation("Subscribings");
                });
#pragma warning restore 612, 618
        }
    }
}
